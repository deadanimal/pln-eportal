{"version":3,"sources":["./src/app/auth/forgot/forgot.component.html","./src/app/auth/login/login.component.html","./src/app/auth/register/register.component.html","(webpack)/buildin/module.js","./src/app/auth/auth.module.ts","./src/app/auth/auth.routing.ts","./src/app/auth/forgot/forgot.component.scss","./src/app/auth/forgot/forgot.component.ts","./src/app/auth/login/login.component.scss","./src/app/auth/login/login.component.ts","./src/app/auth/register/register.component.scss","./src/app/auth/register/register.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["export default \"<ngx-loading-bar></ngx-loading-bar>\\n<div class=\\\"main-content auth-content jumbotron d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-5 col-md-7\\\">\\n                <div class=\\\"card bg-secondary border-0 mb-0\\\">\\n                    <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n                        <div class=\\\"client-logo-area\\\">\\n                            <img class=\\\"client-logo\\\" [src]=\\\"imgLogo\\\">\\n                        </div>\\n\\n                        <form [formGroup]=\\\"resetForm\\\">\\n                            <div class=\\\"form-group mb-3\\\" [ngClass]=\\\"{ focused: focusEmail === true }\\\">\\n                                <div class=\\\"input-group input-group-alternative\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text bg-primary\\\">\\n                                            <i class=\\\"ni ni-email-83 text-white\\\"></i>\\n                                        </span>\\n                                    </div>\\n                                    <input\\n                                        class=\\\"form-control text-dark\\\"\\n                                        placeholder=\\\"Email\\\"\\n                                        type=\\\"email\\\"\\n                                        formControlName=\\\"email\\\"\\n                                        (focus)=\\\"focusEmail = true\\\"\\n                                        (blur)=\\\"focusEmail = false\\\"\\n                                    />\\n                                </div>\\n                                <ng-container *ngFor=\\\"let validation of resetFormMessages.email\\\">\\n                                    <div *ngIf=\\\"resetForm.get('email').hasError(validation.type) && (resetForm.get('email').dirty || resetForm.get('email').touched)\\\">\\n                                        <p class=\\\"error-message\\\"><span>*{{ validation.message }}</span></p>\\n                                    </div>\\n                                </ng-container>\\n                            </div>\\n\\n                            <div class=\\\"text-center\\\">\\n                                <button \\n                                    type=\\\"button\\\" \\n                                    class=\\\"btn btn-primary btn-block my-4\\\" \\n                                    (click)=\\\"submitReset()\\\"\\n                                    [disabled]=\\\"!resetForm.valid\\\"\\n                                >\\n                                    Reset Password\\n                                </button>\\n                                <button \\n                                    type=\\\"button\\\" \\n                                    class=\\\"btn btn-outline-primary btn-block my-4\\\" \\n                                    (click)=\\\"navigatePage('/auth/login')\\\"\\n                                >\\n                                    Login\\n                                </button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"<ngx-loading-bar></ngx-loading-bar>\\n<div class=\\\"main-content auth-content d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-5 col-md-7\\\">\\n                <div class=\\\"card bg-secondary border-0 mb-0\\\">\\n                    <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n                        <div class=\\\"logo-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<img class=\\\"logo\\\" [src]=\\\"imgLogo\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n                        <form [formGroup]=\\\"loginForm\\\">\\n                            <div class=\\\"form-group mb-3\\\" [ngClass]=\\\"{ focused: focusUsername === true }\\\">\\n                                <div class=\\\"input-group input-group-alternative\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text bg-primary\\\">\\n                                            <i class=\\\"fas fa-envelope text-white\\\"></i>\\n                                        </span>\\n                                    </div>\\n                                    <input \\n                                        class=\\\"form-control\\\" \\n                                        placeholder=\\\"Email\\\" \\n                                        type=\\\"email\\\"\\n                                        formControlName=\\\"username\\\"\\n                                        (focus)=\\\"focusUsername = true\\\" \\n                                        (blur)=\\\"focusUsername = false\\\"\\n                                    />\\n                                </div>\\n                                <ng-container *ngFor=\\\"let message of loginFormMessages.username\\\">\\n                                    <div *ngIf=\\\"loginForm.get('username').hasError(message.type) && (loginForm.get('username').dirty || loginForm.get('username').touched)\\\">\\n                                        <p class=\\\"error-message\\\"><span>{{ message.message }}</span></p>\\n                                    </div>\\n                                </ng-container>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\" [ngClass]=\\\"{ focused: focusPassword === true }\\\">\\n                                <div class=\\\"input-group input-group-alternative\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text bg-primary\\\">\\n                                            <i class=\\\"fas fa-lock text-white\\\"></i>\\n                                        </span>\\n                                    </div>\\n                                    <input \\n                                        class=\\\"form-control\\\"\\n                                        placeholder=\\\"Password\\\"\\n                                        type=\\\"password\\\"\\n                                        formControlName=\\\"password\\\"\\n                                        (focus)=\\\"focusPassword = true\\\" \\n                                        (blur)=\\\"focusPassword = false\\\"\\n                                    />\\n                                </div>\\n                                <div class=\\\"validation-errors\\\">\\n                                    <ng-container *ngFor=\\\"let message of loginFormMessages.password\\\">\\n                                        <div *ngIf=\\\"loginForm.get('password').hasError(message.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\\\">\\n                                            <p class=\\\"error-message\\\"><span>{{ message.message }}</span></p>\\n                                        </div>\\n                                    </ng-container>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"custom-control-input\\\" id=\\\"customCheckLogin\\\" type=\\\"checkbox\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"custom-control-label\\\" for=\\\"customCheckLogin\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Remember me?</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-6 text-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"forget-label\\\" (click)=\\\"navigatePage('/forgot')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Forgot password</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n                        </form>\\n\\n                        <div class=\\\"text-center\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary my-4 btn-block\\\" (click)=\\\"login()\\\">\\n                                Sign in\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<ngx-loading-bar></ngx-loading-bar>\\n<div class=\\\"main-content auth-content d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-5 col-md-7\\\">\\n                <div class=\\\"card bg-secondary border-0 mb-0\\\">\\n                    <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n                        <div class=\\\"logo-box\\\">\\n                            <img class=\\\"logo\\\" [src]=\\\"imgLogo\\\">\\n                            <h6 class=\\\"h2 text-default mt-3 mb-0\\\">Register account</h6>\\n                        </div>\\n\\n                        <form [formGroup]=\\\"registerForm\\\">\\n                            <div class=\\\"form-group\\\" [ngClass]=\\\"{ focused: focusUsername === true }\\\">\\n                                <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text bg-primary\\\">\\n                                            <i class=\\\"fas fa-envelope text-white\\\"></i>\\n                                        </span>\\n                                    </div>\\n                                    <input \\n                                        class=\\\"form-control\\\" \\n                                        placeholder=\\\"Email\\\"\\n                                        type=\\\"email\\\"\\n                                        formControlName=\\\"username\\\"\\n                                        (focus)=\\\"focusUsername = true\\\"\\n                                        (blur)=\\\"focusUsername = false\\\"\\n                                    />\\n                                </div>\\n                                <ng-container *ngFor=\\\"let message of registerFormMessages.username\\\">\\n                                    <div *ngIf=\\\"registerForm.get('username').hasError(message.type) && (registerForm.get('username').dirty || registerForm.get('username').touched)\\\">\\n                                        <p class=\\\"error-message\\\"><span>{{ message.message }}</span></p>\\n                                    </div>\\n                                </ng-container>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\" [ngClass]=\\\"{ focused: focusPassword === true }\\\">\\n                                <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text bg-primary\\\">\\n                                            <i class=\\\"fas fa-lock text-white\\\"></i>\\n                                        </span>\\n                                    </div>\\n                                    <input \\n                                        class=\\\"form-control\\\"\\n                                        placeholder=\\\"Password\\\"\\n                                        type=\\\"password\\\" \\n                                        formControlName=\\\"password1\\\"\\n                                        (focus)=\\\"focusPassword = true\\\"\\n                                        (blur)=\\\"focusPassword = false\\\"\\n                                    />\\n                                </div>\\n                                <ng-container *ngFor=\\\"let message of registerFormMessages.password1\\\">\\n                                    <div *ngIf=\\\"registerForm.get('password1').hasError(message.type) && (registerForm.get('password1').dirty || registerForm.get('password1').touched)\\\">\\n                                        <p class=\\\"error-message\\\"><span>{{ message.message }}</span></p>\\n                                    </div>\\n                                </ng-container>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\" [ngClass]=\\\"{ focused: focusConfirmPassword === true }\\\">\\n                                <div class=\\\"input-group input-group-alternative\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text bg-primary\\\">\\n                                            <i class=\\\"fas fa-lock text-white\\\"></i>\\n                                        </span>\\n                                    </div>\\n                                    <input \\n                                        class=\\\"form-control\\\"\\n                                        placeholder=\\\"Confirm password\\\" \\n                                        type=\\\"password\\\"\\n                                        formControlName=\\\"password2\\\"\\n                                        (focus)=\\\"focusConfirmPassword = true\\\"\\n                                        (blur)=\\\"focusConfirmPassword = false\\\" \\n                                    />\\n                                </div>\\n                                <ng-container *ngFor=\\\"let message of registerFormMessages.password2\\\">\\n                                    <div *ngIf=\\\"registerForm.get('password2').hasError(message.type) && (registerForm.get('password2').dirty || registerForm.get('password2').touched)\\\">\\n                                        <p class=\\\"error-message\\\"><span>{{ message.message }}</span></p>\\n                                    </div>\\n                                </ng-container>\\n                            </div>\\n                            <!--\\n                            <div class=\\\"strength\\\">\\n                                <ul class=\\\"strength-bar\\\">\\n                                    <li class=\\\"point\\\" [style.background-color]=\\\"bar0\\\"></li>\\n                                    <li class=\\\"point\\\" [style.background-color]=\\\"bar1\\\"></li>\\n                                    <li class=\\\"point\\\" [style.background-color]=\\\"bar2\\\"></li>\\n                                    <li class=\\\"point\\\" [style.background-color]=\\\"bar3\\\"></li>\\n                                </ul>\\n                            </div>\\n                            -->\\n                            <div class=\\\"text-muted font-italic\\\">\\n                                <small>password strength:\\n                                    <span class=\\\"text-success font-weight-700\\\">strong</span>\\n                                </small>\\n                            </div>\\n\\n                            <div class=\\\"row my-4\\\">\\n                                <div class=\\\"col-12\\\">\\n                                    <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                                        <input class=\\\"custom-control-input\\\" id=\\\"customCheckRegister\\\" type=\\\"checkbox\\\" />\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customCheckRegister\\\">\\n                                            <span>I agree with the\\n                                                <a href=\\\"javascript:void(0)\\\">Privacy Policy</a>\\n                                            </span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </form>\\n\\n                        <div class=\\\"text-center\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary mt-4 btn-block\\\" (click)=\\\"createAccount()\\\">\\n                                Create account\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-icon btn-outline-primary btn-block my-2\\\"  (click)=\\\"navigatePage('login')\\\">\\n                                <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-angle-left\\\"></i></span>\\n                                <span class=\\\"btn-inner--text\\\">Login</span>\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { \n  BsDropdownModule, \n  ProgressbarModule,\n  TooltipModule\n} from 'ngx-bootstrap';\n\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\n\nimport { RouterModule } from '@angular/router';\nimport { AuthRoutes } from './auth.routing';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotComponent } from './forgot/forgot.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    ForgotComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    ProgressbarModule.forRoot(),\n    TooltipModule.forRoot(),\n    LoadingBarModule,\n    RouterModule.forChild(AuthRoutes)\n  ]\n})\nexport class AuthModule { }\n","import { Routes } from '@angular/router';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nexport const AuthRoutes: Routes = [\n    {\n        path: '',\n        children: [\n            {\n                path: 'forgot',\n                component: ForgotComponent\n            },\n            {\n                path: 'login',\n                component: LoginComponent\n            },\n            {\n                path: 'register',\n                component: RegisterComponent\n            }\n        ]\n    }\n]","export default \".logo-box {\\n  text-align: center;\\n  margin-bottom: 2rem;\\n}\\n.logo-box .logo {\\n  max-height: 9rem;\\n}\\n.auth-content {\\n  background-color: #172b4d;\\n  background-image: url('galaxy.jpg');\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  height: 100vh;\\n  overflow: hidden;\\n}\\n.error-message {\\n  color: #f5365c;\\n  text-align: right;\\n  font-size: 0.8em;\\n  padding-top: 5px;\\n  padding-bottom: 0;\\n  margin-bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZml6aWh1c2FpbmkvRG9jdW1lbnRzL3BuLWdpdGh1Yi9wbG4tZXBvcnRhbC93ZWJhcHAvc3JjL2FwcC9hdXRoL2ZvcmdvdC9mb3Jnb3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2F1dGgvZm9yZ290L2ZvcmdvdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsbUJBQUE7QUNDSjtBREFJO0VBQ0ksZ0JBQUE7QUNFUjtBREVBO0VBQ0kseUJBQUE7RUFDQSxtQ0FBQTtFQUNBLDRCQUFBO0VBSUEsc0JBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7QUNDSjtBREVBO0VBQ0ksY0FBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvZm9yZ290L2ZvcmdvdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dvLWJveCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XG4gICAgLmxvZ28ge1xuICAgICAgICBtYXgtaGVpZ2h0OiA5cmVtO1xuICAgIH1cbn1cblxuLmF1dGgtY29udGVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE3MmI0ZDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uLy4uL2Fzc2V0cy9pbWcvYmFja2dyb3VuZC9nYWxheHkuanBnJyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgLW1vei1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIC1vLWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgICBjb2xvcjogI2Y1MzY1YztcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBmb250LXNpemU6IDAuOGVtO1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbn0iLCIubG9nby1ib3gge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG4ubG9nby1ib3ggLmxvZ28ge1xuICBtYXgtaGVpZ2h0OiA5cmVtO1xufVxuXG4uYXV0aC1jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE3MmI0ZDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vLi4vYXNzZXRzL2ltZy9iYWNrZ3JvdW5kL2dhbGF4eS5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgLW1vei1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiAjZjUzNjVjO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgcGFkZGluZy10b3A6IDVweDtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms'\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.scss']\n})\nexport class ForgotComponent implements OnInit {\n\n  // Image\n  imgLogo: string = 'assets/img/logo/planetarium-logo.png'\n\n  // Reset form\n  focusEmail: boolean = false\n  resetForm: FormGroup\n  resetFormMessages = {\n    'email': [\n      { type: 'required', message: 'Email is required' },\n      { type: 'email', message: 'Please enter a valid email'}\n    ]\n  }\n\n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private loadingBar: LoadingBarService,\n    private toastr: ToastrService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n\n  initForm() {\n    this.resetForm = this.formBuilder.group({\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.email\n      ])]\n    })\n  }\n\n  submitReset(){\n    // console.log(this.resetForm.value)\n    this.loadingBar.start()\n    this.authService.resetPassword(this.resetForm.value).subscribe(\n      () => {\n        // Success\n        this.loadingBar.complete()\n        this.successMessage()\n      },\n      () => {\n        // Failed\n        this.loadingBar.complete()\n      },\n      () => {\n        // After\n      }\n    )\n  }\n  \n  successMessage() {\n    let title = 'Success'\n    let message = 'An email has been sent to ' + this.resetForm.value.email + ' to reset your password'\n    this.toastr.success(message, title)\n  }\n\n  navigatePage(path: string) {\n    return this.router.navigate([path])\n  }\n\n}\n","export default \".logo-box {\\n  text-align: center;\\n  margin-bottom: 2rem;\\n}\\n.logo-box .logo {\\n  max-height: 9rem;\\n}\\n.auth-content {\\n  background-color: #172b4d;\\n  background-image: url('galaxy.jpg');\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  height: 100vh;\\n  overflow: hidden;\\n}\\n.forget-label {\\n  font-size: 0.875rem;\\n  cursor: pointer;\\n}\\n.forget-label span {\\n  position: relative;\\n  top: 2px;\\n}\\n.custom-control-label {\\n  vertical-align: none !important;\\n}\\n.error-message {\\n  color: #f5365c;\\n  text-align: right;\\n  font-size: 0.8em;\\n  padding-top: 5px;\\n  padding-bottom: 0;\\n  margin-bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZml6aWh1c2FpbmkvRG9jdW1lbnRzL3BuLWdpdGh1Yi9wbG4tZXBvcnRhbC93ZWJhcHAvc3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxtQkFBQTtBQ0NKO0FEQUk7RUFDSSxnQkFBQTtBQ0VSO0FERUE7RUFDSSx5QkFBQTtFQUNBLG1DQUFBO0VBQ0EsNEJBQUE7RUFJQSxzQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtBQ0NKO0FERUE7RUFDSSxtQkFBQTtFQUNBLGVBQUE7QUNDSjtBREFJO0VBQ0ksa0JBQUE7RUFDQSxRQUFBO0FDRVI7QURFQTtFQUNJLCtCQUFBO0FDQ0o7QURFQTtFQUNJLGNBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ28tYm94IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICAubG9nbyB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDlyZW07XG4gICAgfVxufVxuXG4uYXV0aC1jb250ZW50IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTcyYjRkO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vLi4vYXNzZXRzL2ltZy9iYWNrZ3JvdW5kL2dhbGF4eS5qcGcnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAtbW96LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgLW8tYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmZvcmdldC1sYWJlbCB7XG4gICAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgc3BhbiB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdG9wOiAycHg7XG4gICAgfVxufVxuXG4uY3VzdG9tLWNvbnRyb2wtbGFiZWwge1xuICAgIHZlcnRpY2FsLWFsaWduOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgICBjb2xvcjogI2Y1MzY1YztcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBmb250LXNpemU6IDAuOGVtO1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbn0iLCIubG9nby1ib3gge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG4ubG9nby1ib3ggLmxvZ28ge1xuICBtYXgtaGVpZ2h0OiA5cmVtO1xufVxuXG4uYXV0aC1jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE3MmI0ZDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vLi4vYXNzZXRzL2ltZy9iYWNrZ3JvdW5kL2dhbGF4eS5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgLW1vei1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uZm9yZ2V0LWxhYmVsIHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmZvcmdldC1sYWJlbCBzcGFuIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDJweDtcbn1cblxuLmN1c3RvbS1jb250cm9sLWxhYmVsIHtcbiAgdmVydGljYWwtYWxpZ246IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmVycm9yLW1lc3NhZ2Uge1xuICBjb2xvcjogI2Y1MzY1YztcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG4gIHBhZGRpbmctdG9wOiA1cHg7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  // Image\n  imgLogo: string = 'assets/img/logo/planetarium-logo.png'\n\n  // Login form\n  focusUsername: boolean = false\n  focusPassword: boolean = false\n  loginForm: FormGroup\n  loginFormMessages = {\n    'username': [\n      { type: 'required', message: 'Email is required' },\n      { type: 'email', message: 'Please enter a valid email'}\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required' },\n      { type: 'minLength', message: 'Password must have at least 8 characters' }\n    ]\n  }\n  \n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private loadingBar: LoadingBarService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.initForm()\n    this.serviceSubscription()\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.compose([\n        Validators.required,\n        Validators.email\n      ])],\n      password: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(8)\n      ])]\n    })\n  }\n\n  serviceSubscription() {\n    // this.userService.getAll().subscribe()\n    // this.programService.getAll().subscribe()\n  }\n\n  login() {\n    this.navigatePage('/dashboard')\n    \n    // this.authService.obtainToken(this.loginForm.value).subscribe(\n    //   () => {\n    //     // Success\n    //     this.loadingBar.complete()\n    //   },\n    //   () => {\n    //     // Failed\n    //     this.loadingBar.complete()\n    //   },\n    //   () => {\n    //     // After\n    //     this.navigatePage('/dashboard')\n    //   }\n    // )\n  }\n\n  successMessage() {\n    let title = 'Success'\n    let message = 'Logging in right now'\n    this.toastr.success(message, title)\n  }\n\n  navigatePage(path: string) {\n    if (path == '/dashboard') {\n      this.successMessage()\n    }\n    return this.router.navigate([path])\n  }\n\n  initServices() {\n    this.loadingBar.start()\n    forkJoin([]).subscribe(\n      () => {\n        this.loadingBar.complete()\n      },\n      () => {\n        this.loadingBar.complete()\n      },\n      () => {}\n    )\n  }\n\n}\n","export default \".logo-box {\\n  text-align: center;\\n  margin-bottom: 2rem;\\n}\\n.logo-box .logo {\\n  max-height: 9rem;\\n}\\n.auth-content {\\n  background-color: #172b4d;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  height: 100vh;\\n  overflow: hidden;\\n}\\n.forget-label {\\n  font-size: 0.875rem;\\n  cursor: pointer;\\n}\\n.forget-label span {\\n  position: relative;\\n  top: 2px;\\n}\\n.custom-control-label {\\n  vertical-align: none !important;\\n}\\n.error-message {\\n  color: #f5365c;\\n  text-align: right;\\n  font-size: 0.8em;\\n  padding-top: 5px;\\n  padding-bottom: 0;\\n  margin-bottom: 0;\\n}\\n.strength-bar {\\n  display: inline;\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n  vertical-align: 2px;\\n}\\n.point:last-of-type {\\n  margin: 0 !important;\\n}\\n.point {\\n  background: #DDD;\\n  border-radius: 2px;\\n  display: inline-block;\\n  height: 5px;\\n  margin-right: 1px;\\n  width: 62px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZml6aWh1c2FpbmkvRG9jdW1lbnRzL3BuLWdpdGh1Yi9wbG4tZXBvcnRhbC93ZWJhcHAvc3JjL2FwcC9hdXRoL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hdXRoL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxtQkFBQTtBQ0NKO0FEQUk7RUFDSSxnQkFBQTtBQ0VSO0FERUE7RUFDSSx5QkFBQTtFQUVBLDRCQUFBO0VBSUEsc0JBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7QUNBSjtBREdBO0VBQ0ksbUJBQUE7RUFDQSxlQUFBO0FDQUo7QURDSTtFQUNJLGtCQUFBO0VBQ0EsUUFBQTtBQ0NSO0FER0E7RUFDSSwrQkFBQTtBQ0FKO0FER0E7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQ0FKO0FER0E7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLG1CQUFBO0FDQUo7QURHQTtFQUNJLG9CQUFBO0FDQUo7QURHQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9nby1ib3gge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgIC5sb2dvIHtcbiAgICAgICAgbWF4LWhlaWdodDogOXJlbTtcbiAgICB9XG59XG5cbi5hdXRoLWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxNzJiNGQ7XG4gICAgLy8gYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi8uLi9hc3NldHMvaW1nL2JhY2tncm91bmQvZ2FsYXh5LmpwZycpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIC1tb3otYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uZm9yZ2V0LWxhYmVsIHtcbiAgICBmb250LXNpemU6IDAuODc1cmVtO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBzcGFuIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0b3A6IDJweDtcbiAgICB9XG59XG5cbi5jdXN0b20tY29udHJvbC1sYWJlbCB7XG4gICAgdmVydGljYWwtYWxpZ246IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmVycm9yLW1lc3NhZ2Uge1xuICAgIGNvbG9yOiAjZjUzNjVjO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgcGFkZGluZy10b3A6IDVweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uc3RyZW5ndGgtYmFyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogMnB4O1xufVxuICBcbi5wb2ludDpsYXN0LW9mLXR5cGUge1xuICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xufVxuICBcbi5wb2ludCB7XG4gICAgYmFja2dyb3VuZDogI0RERDtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGhlaWdodDogNXB4O1xuICAgIG1hcmdpbi1yaWdodDogMXB4O1xuICAgIHdpZHRoOiA2MnB4O1xufVxuICBcbi8vIHAge1xuLy8gICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuLy8gICAgIGZvbnQtc2l6ZTogMjBweDtcbi8vIH1cbiAgIiwiLmxvZ28tYm94IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xufVxuLmxvZ28tYm94IC5sb2dvIHtcbiAgbWF4LWhlaWdodDogOXJlbTtcbn1cblxuLmF1dGgtY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxNzJiNGQ7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgLW1vei1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uZm9yZ2V0LWxhYmVsIHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmZvcmdldC1sYWJlbCBzcGFuIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDJweDtcbn1cblxuLmN1c3RvbS1jb250cm9sLWxhYmVsIHtcbiAgdmVydGljYWwtYWxpZ246IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmVycm9yLW1lc3NhZ2Uge1xuICBjb2xvcjogI2Y1MzY1YztcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG4gIHBhZGRpbmctdG9wOiA1cHg7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uc3RyZW5ndGgtYmFyIHtcbiAgZGlzcGxheTogaW5saW5lO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiAycHg7XG59XG5cbi5wb2ludDpsYXN0LW9mLXR5cGUge1xuICBtYXJnaW46IDAgIWltcG9ydGFudDtcbn1cblxuLnBvaW50IHtcbiAgYmFja2dyb3VuZDogI0RERDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogNXB4O1xuICBtYXJnaW4tcmlnaHQ6IDFweDtcbiAgd2lkdGg6IDYycHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { NotifyService } from 'src/app/shared/handler/notify/notify.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  // Image\n  imgLogo = 'assets/img/logo/prototype-logo.png'\n\n  // Form\n  focusUsername\n  focusPassword\n  focusConfirmPassword\n  registerForm: FormGroup\n  registerFormMessages = {\n    'username': [\n      { type: 'required', message: 'Email is required' },\n      { type: 'email', message: 'Please enter a valid email'}\n    ],\n    'password1': [\n      { type: 'required', message: 'Password is required' },\n      { type: 'minLength', message: 'Password must have at least 8 characters' }\n    ],\n    'password2': [\n      { type: 'required', message: 'Password is required' },\n      { type: 'minLength', message: 'Password must have at least 8 characters' }\n    ]\n  }\n  bar0: string\n  bar1: string\n  bar2: string\n  bar3: string\n\n  constructor(\n    private authService: AuthService,\n    private notifyService: NotifyService,\n    private formBuilder: FormBuilder,\n    private loadingBar: LoadingBarService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.email\n      ])),\n      password1: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(8)\n      ])),\n      password2: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(8)\n      ]))\n    })\n  }\n\n  createAccount() {\n    this.loadingBar.start()\n    this.loadingBar.complete()\n    this.successMessage()\n  }\n\n  navigatePage(path: String) {\n    if (path == 'login') {\n      return this.router.navigate(['/auth/login'])\n    }\n  }\n\n  successMessage() {\n    let title = 'Success'\n    let message = 'Loging in right now'\n    this.notifyService.openToastr(title, message)\n  }\n\n}\n"],"sourceRoot":"webpack:///"}