# Generated by Django 2.2.6 on 2021-09-02 06:11

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('surveys', '0008_surveyquestion_questionnaire_required'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalSurveyQuestion',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('questionnaire_fieldname', models.CharField(blank=True, max_length=50)),
                ('questionnaire_question_en', models.TextField(blank=True)),
                ('questionnaire_question_ms', models.TextField(blank=True)),
                ('questionnaire_type', models.CharField(choices=[('CB', 'Checkbox'), ('SL', 'Selection'), ('TB', 'Textbox'), ('RB', 'Radiobox'), ('RT', 'Rating'), ('NA', 'Not Available')], default='NA', max_length=2)),
                ('questionnaire_answer', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('questionnaire_module', models.CharField(choices=[('M01', 'Tayangan'), ('M02', 'Pameran'), ('M03', 'Program Pendidikan'), ('M04', 'Keberkesanan'), ('M05', 'Kembara Simulasi'), ('M06', 'Lawatan'), ('M07', 'Kutubkhanah Mini/Penerbitan'), ('M08', 'Fasiliti'), ('NAV', 'Not Available')], default='NAV', max_length=3)),
                ('questionnaire_status', models.BooleanField(default=True)),
                ('questionnaire_required', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical survey question',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSurveyAnswer',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('answer', models.CharField(default='NA', max_length=100)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('survey_question_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='surveys.SurveyQuestion')),
                ('user_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical survey answer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
