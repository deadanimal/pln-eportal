# Generated by Django 2.2.6 on 2021-09-02 02:56

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('venues', '0026_historicalfacility_historicalfacilitybooking_historicalfacilityimage_historicalfacilityprice_histori'),
        ('events', '0036_auto_20210504_0425'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalVisitApplication',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('organisation_name', models.CharField(default='NA', max_length=255)),
                ('organisation_category', models.CharField(choices=[('GV', 'Government'), ('SC', 'School'), ('UN', 'University'), ('NA', 'Not Available')], default='NA', max_length=2)),
                ('visit_date', models.DateField(default=datetime.date.today)),
                ('visit_time', models.TimeField(null=True)),
                ('total_participant', models.IntegerField(default=0)),
                ('tour_guide', models.BooleanField(default=False)),
                ('other_activities', models.CharField(default='NA', max_length=255)),
                ('document_link', models.TextField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('AP', 'Approved'), ('IP', 'In process'), ('RJ', 'Rejected')], default='IP', max_length=2)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pic_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical visit application',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalVisit',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('title', models.CharField(default='NA', max_length=255)),
                ('description', models.TextField(default='NA')),
                ('status', models.BooleanField(default=False)),
                ('image_link', models.TextField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical visit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExhibitList',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('name_en', models.CharField(default='NA', max_length=255)),
                ('name_ms', models.CharField(default='NA', max_length=255)),
                ('image_link', models.TextField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('AV', 'Available'), ('NA', 'Not Available')], default='AV', max_length=2)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exhibit_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.Exhibit')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical exhibit list',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExhibitDetailImage',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('exhibit_detail_image', models.TextField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exhibit_detail_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.ExhibitDetail')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical exhibit detail image',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExhibitDetail',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('name_en', models.CharField(default='NA', max_length=255)),
                ('name_ms', models.CharField(default='NA', max_length=255)),
                ('description_en', models.TextField(blank=True)),
                ('description_ms', models.TextField(blank=True)),
                ('video_link', models.TextField(blank=True, max_length=100, null=True)),
                ('qrcode', models.CharField(default='NA', max_length=255)),
                ('status', models.CharField(choices=[('AV', 'Available'), ('NA', 'Not Available')], default='AV', max_length=2)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exhibit_list_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.ExhibitList')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('venue_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='venues.Venue')),
            ],
            options={
                'verbose_name': 'historical exhibit detail',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExhibit',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('name', models.CharField(default='NA', max_length=255)),
                ('description', models.CharField(default='NA', max_length=255)),
                ('image_link', models.TextField(blank=True, max_length=100, null=True)),
                ('zone', models.CharField(choices=[('A', 'Alam Semesta'), ('B', 'Ruang Kanak-kanak'), ('C', 'Teknologi Satelit'), ('D', 'Misi Angkasa'), ('E', 'Sistem Solar'), ('F', 'Gelombang'), ('G', 'Balai Cerap'), ('H', 'Menara Pemandangan'), ('N', 'Not Available')], db_index=True, default='N', max_length=1)),
                ('equipment', models.TextField(blank=True)),
                ('qrcode', models.CharField(default='NA', max_length=255)),
                ('status', models.CharField(choices=[('AV', 'Available'), ('NA', 'Not Available')], default='AV', max_length=2)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pic_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical exhibit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEducationalProgramImage',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('program_image', models.TextField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.EducationalProgram')),
            ],
            options={
                'verbose_name': 'historical educational program image',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEducationalProgramForm',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('teacher_name', models.CharField(blank=True, max_length=100)),
                ('teacher_school_name', models.CharField(blank=True, max_length=100)),
                ('teacher_school_address', models.CharField(blank=True, max_length=255)),
                ('teacher_school_postcode', models.CharField(blank=True, max_length=5)),
                ('teacher_school_division', models.CharField(blank=True, max_length=100)),
                ('teacher_school_state', models.CharField(blank=True, max_length=100)),
                ('teacher_tel', models.CharField(blank=True, max_length=20)),
                ('teacher_hp', models.CharField(blank=True, max_length=20)),
                ('teacher_email', models.CharField(blank=True, max_length=100)),
                ('teacher_fax', models.CharField(blank=True, max_length=20)),
                ('teacher_dob', models.DateField(blank=True, default=datetime.datetime.today)),
                ('teacher_age', models.IntegerField(default=0, null=True)),
                ('teacher_religion', models.CharField(choices=[('IS', 'Islam'), ('HD', 'Hindu'), ('BD', 'Buddha'), ('CT', 'Christian'), ('OT', 'Other')], default='OT', max_length=2)),
                ('teacher_gender', models.CharField(choices=[('FM', 'Female'), ('ML', 'Male'), ('NA', 'Not Available')], default='NA', max_length=2)),
                ('teacher_citizenship', models.CharField(choices=[('CZ', 'Citizen'), ('NC', 'Non Citizen'), ('NA', 'Not Available')], default='NA', max_length=2)),
                ('teacher_nric_passportno', models.CharField(blank=True, max_length=50)),
                ('teacher_maritalstatus', models.CharField(choices=[('S', 'Single'), ('M', 'Married'), ('O', 'Other')], default='O', max_length=1)),
                ('teacher_tshirt_size', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('2XL', '2XL'), ('3XL', '3XL')], default='S', max_length=3)),
                ('teacher_contactperson_name', models.CharField(blank=True, max_length=100)),
                ('teacher_contactperson_tel', models.CharField(blank=True, max_length=20)),
                ('teacher_anysickness', models.CharField(blank=True, max_length=255)),
                ('teacher_anyallergies', models.CharField(blank=True, max_length=255)),
                ('teacher_vegetarian', models.BooleanField(default=False)),
                ('student_1_name', models.CharField(blank=True, max_length=100)),
                ('student_1_dob', models.DateField(blank=True, default=datetime.datetime.today)),
                ('student_1_age', models.IntegerField(default=0, null=True)),
                ('student_1_year', models.IntegerField(default=0, null=True)),
                ('student_1_religion', models.CharField(choices=[('IS', 'Islam'), ('HD', 'Hindu'), ('BD', 'Buddha'), ('CT', 'Christian'), ('OT', 'Other')], default='OT', max_length=2)),
                ('student_1_gender', models.CharField(choices=[('FM', 'Female'), ('ML', 'Male'), ('NA', 'Not Available')], default='NA', max_length=2)),
                ('student_1_citizenship', models.CharField(choices=[('CZ', 'Citizen'), ('NC', 'Non Citizen'), ('NA', 'Not Available')], default='NA', max_length=2)),
                ('student_1_nric_passportno', models.CharField(blank=True, max_length=50)),
                ('student_1_tshirt_size', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('2XL', '2XL'), ('3XL', '3XL')], default='S', max_length=3)),
                ('student_1_contactperson_name', models.CharField(blank=True, max_length=100)),
                ('student_1_contactperson_tel', models.CharField(blank=True, max_length=20)),
                ('student_1_anysickness', models.CharField(blank=True, max_length=255)),
                ('student_1_anyallergies', models.CharField(blank=True, max_length=255)),
                ('student_1_vegetarian', models.BooleanField(default=False)),
                ('student_2_name', models.CharField(blank=True, max_length=100)),
                ('student_2_dob', models.DateField(blank=True, default=datetime.datetime.today)),
                ('student_2_age', models.IntegerField(default=0, null=True)),
                ('student_2_year', models.IntegerField(default=0, null=True)),
                ('student_2_religion', models.CharField(choices=[('IS', 'Islam'), ('HD', 'Hindu'), ('BD', 'Buddha'), ('CT', 'Christian'), ('OT', 'Other')], default='OT', max_length=2)),
                ('student_2_gender', models.CharField(choices=[('FM', 'Female'), ('ML', 'Male'), ('NA', 'Not Available')], default='NA', max_length=2)),
                ('student_2_citizenship', models.CharField(choices=[('CZ', 'Citizen'), ('NC', 'Non Citizen'), ('NA', 'Not Available')], default='NA', max_length=2)),
                ('student_2_nric_passportno', models.CharField(blank=True, max_length=50)),
                ('student_2_tshirt_size', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('2XL', '2XL'), ('3XL', '3XL')], default='S', max_length=3)),
                ('student_2_contactperson_name', models.CharField(blank=True, max_length=100)),
                ('student_2_contactperson_tel', models.CharField(blank=True, max_length=20)),
                ('student_2_anysickness', models.CharField(blank=True, max_length=255)),
                ('student_2_anyallergies', models.CharField(blank=True, max_length=255)),
                ('student_2_vegetarian', models.BooleanField(default=False)),
                ('approved_date', models.DateTimeField(null=True)),
                ('rejected_date', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('AP', 'Approved'), ('IP', 'In process'), ('RJ', 'Rejected')], default='IP', max_length=2)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('educational_program_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.EducationalProgram')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical educational program form',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEducationalProgramDate',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('program_date', models.DateField(default=datetime.date.today)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.EducationalProgram')),
            ],
            options={
                'verbose_name': 'historical educational program date',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEducationalProgramApplication',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('organisation_name', models.CharField(default='NA', max_length=255)),
                ('organisation_category', models.CharField(choices=[('GV', 'Government'), ('SC', 'School'), ('UN', 'University'), ('NA', 'Not Available')], default='NA', max_length=2)),
                ('participant', models.IntegerField(default=0)),
                ('age', models.IntegerField(default=0)),
                ('document_link', models.TextField(blank=True, max_length=100, null=True)),
                ('image_link', models.TextField(blank=True, max_length=100, null=True)),
                ('video_link', models.TextField(blank=True, max_length=100, null=True)),
                ('approved_date', models.DateTimeField(null=True)),
                ('rejected_date', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('AP', 'Approved'), ('IP', 'In process'), ('RJ', 'Rejected')], default='IP', max_length=2)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('activity', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.EducationalProgramActivity')),
                ('customer_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('educational_program_date_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.EducationalProgramDate')),
                ('educational_program_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.EducationalProgram')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical educational program application',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEducationalProgramActivity',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('program_activity', models.CharField(blank=True, max_length=255)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.EducationalProgram')),
            ],
            options={
                'verbose_name': 'historical educational program activity',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEducationalProgram',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('title_en', models.CharField(default='NA', max_length=255)),
                ('description_en', models.TextField(default='NA')),
                ('title_ms', models.CharField(default='NA', max_length=255)),
                ('description_ms', models.TextField(default='NA')),
                ('program_type', models.CharField(choices=[('PL', 'Public'), ('PV', 'Private')], default='PL', max_length=2)),
                ('program_category', models.CharField(choices=[('P1', 'PROGRAM PEMBANGUNAN MURID/GURU'), ('P2', 'PROGRAM PENCERAPAN'), ('P3', 'PROGRAM KHAS'), ('P4', 'PROGRAM KEBANGSAAN'), ('P5', 'PROGRAM ANTARABANGSA'), ('P6', 'PROGRAM/RAKAN KERJASAMA'), ('P7', 'PROGRAM JANGKAUAN (6 ZON)'), ('P8', 'SEMINAR, CERAMAH, PLANETARIUM TALKS'), ('P9', 'LAIN-LAIN'), ('NA', 'Not Available')], default='NA', max_length=2)),
                ('program_subcategory', models.CharField(choices=[('NSC', 'National Space Challenge'), ('KRK', 'Kejohanan Roket Kebangsaan'), ('NAV', 'Not Available')], default='NAV', max_length=3)),
                ('program_opento_en', models.CharField(default='', max_length=100)),
                ('program_opento_ms', models.CharField(default='', max_length=100)),
                ('min_participant', models.IntegerField(default=0, null=True)),
                ('max_participant', models.IntegerField(default=0, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('poster_link', models.TextField(blank=True, max_length=100, null=True)),
                ('website_link', models.URLField(blank=True)),
                ('video_link', models.URLField(blank=True)),
                ('attachment_link', models.TextField(blank=True, max_length=100, null=True)),
                ('registration', models.BooleanField(default=True)),
                ('activity', models.BooleanField(default=False)),
                ('program_code', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(choices=[('AV', 'Available'), ('NA', 'Not Available')], default='AV', max_length=2)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical educational program',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
